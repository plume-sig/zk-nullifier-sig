name: Circom checks
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checks:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18]
        command: ["prettier", "types", "test:coverage"]

    runs-on: ubuntu-latest

    timeout-minutes: 240

    steps:
      - uses: actions/checkout@v4

      - name: Clone circom repository
        uses: actions/checkout@v4
        with:
          repository: iden3/circom
          path: ./circom

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: "clippy, rustfmt"

      - name: Cache circom
        uses: actions/cache@v3
        id: circom-cache
        continue-on-error: true
        with:
          path: |
            ~/.cargo/bin/circom
          key: ${{ runner.os }}-circom-${{ hashFiles('./circom/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-circom-

      - name: Install circom
        if: steps.circom-cache.outputs.cache-hit != 'true'
        run: |
          cargo build --release
          cargo install --path circom
        working-directory: ./circom
        

      - name: Build javascript
        run: |
          pnpm install --no-frozen-lockfile --prefer-offline
          pnpm run build
        working-directory: "./javascript"

      - name: Check circom
        run: |
          pnpm install --no-frozen-lockfile --prefer-offline
          pnpm run ${{ matrix.command }}
        working-directory: "./circuits/circom"
